APP_NAME="Sukna"
APP_VERSION=1.1
APP_ENV=local
APP_KEY=base64:Vm09oSPl0eBlwAnoZvLlBj7Xw8f9iVCf+FHOJ5q3k9Q=
APP_DEBUG=true
APP_URL=http://localhost:8080


LOG_CHANNEL=stack
LOG_DEPRECATIONS_CHANNEL=null
LOG_LEVEL=debug

# DB_CONNECTION=mysql
# DB_HOST=mysql
# DB_PORT=3306
# DB_DATABASE=sukna
# DB_USERNAME=root
# DB_PASSWORD=12345678

DB_CONNECTION=mysql
DB_HOST=db
DB_PORT=3306
DB_DATABASE=sukna
DB_USERNAME=root
DB_PASSWORD=root

BROADCAST_DRIVER=log
CACHE_DRIVER=file
FILESYSTEM_DISK=public
QUEUE_CONNECTION=sync
SESSION_DRIVER=file
SESSION_LIFETIME=120

MEMCACHED_HOST=127.0.0.1

REDIS_HOST=redis
REDIS_PASSWORD=null
REDIS_PORT=6379

MAIL_MAILER=smtp
MAIL_HOST=mailpit
MAIL_PORT=1025
MAIL_USERNAME=null
MAIL_PASSWORD=null
MAIL_ENCRYPTION=null
MAIL_FROM_ADDRESS="hello@example.com"
MAIL_FROM_NAME="${APP_NAME}"

AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_DEFAULT_REGION=us-east-1
AWS_BUCKET=
AWS_USE_PATH_STYLE_ENDPOINT=false

PUSHER_APP_ID=
PUSHER_APP_KEY=
PUSHER_APP_SECRET=
PUSHER_HOST=
PUSHER_PORT=443
PUSHER_SCHEME=https
PUSHER_APP_CLUSTER=mt1

VITE_APP_NAME="${APP_NAME}"
VITE_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
VITE_PUSHER_HOST="${PUSHER_HOST}"
VITE_PUSHER_PORT="${PUSHER_PORT}"
VITE_PUSHER_SCHEME="${PUSHER_SCHEME}"
VITE_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"

MAPBOX_ACCESS_TOKEN=pk.eyJ1Ijoic3VrbmFtZG4iLCJhIjoiY20zb2N3N2hzMDI5NjJqc2E3cmF3NDQ4ZCJ9.NvFXESTZEu3KgctyGDKo1Q

# test keys
MOYASAR_API_KEY=pk_test_TtfqNxzGtaJ7pU6CV2o6Rwk9tB58LxxHpJNNKRb1
MOYASA_SECRET_KEY=sk_test_HNB5MSKZNx95wZg8HWFTbf5DGehpkrFz7XPig3tV

# live keys
# MOYASAR_API_KEY=pk_live_PxSe29W5FvNuQUw6xvvf6747j5FNxM4noepXDsGA
# MOYASA_SECRET_KEY=sk_live_i8RtHTFem94MEeXu9nRgApwmNMucGZWpx5EsHA73


NAFATH_BASE_URL="https://iam.elm.sa/authservice"
NAFATH_CLIENT_ID="0ac6e0d1a3185a1afdfd1954ba9846af"
NAFATH_REDIRECT_URI="${APP_URL}/api/nafath/callback"
NAFATH_CERTIFICATE_PATH="${APP_URL}/storage/certs/certificate.cer"
NAFATH_PRIVATE_KEY_PATH="${APP_URL}/storage/certs/private.key"

# https://github.com/jantinnerezo/livewire-alert
# cd ~
# sudo curl -sS https://getcomposer.org/installer | sudo php
# sudo mv composer.phar /usr/local/bin/composer
# sudo ln -s /usr/local/bin/composer /usr/bin/composer

# composer2 install --ignore-platform-reqs
# composer2 dump-autoload --ignore-platform-reqs

# nvm install 12
# nvm install 16.16.0
# nvm use 16.16.0
# node -v
# npm -v
# https://filamentphp.com/plugins/3x1io-tomato-artisan/installation


# d48^iMXX]jBseFLZ


# # 1. Generate private key
# openssl genrsa -des3 -out iamtest.yourcompany.key 2048

# # 2. Generate CSR (Certificate Signing Request)
# openssl req -new -key iamtest.yourcompany.key -out iamtest.yourcompany.key.csr

# # 3. After receiving certificates from Elm, create PFX file
# openssl pkcs12 -export -out certificate.pfx -inkey iamtest.yourcompany.key -in referenceNumber.cer -certfile InfraCAPP.cer

# mkdir -p storage/certs
# chmod 700 storage/certs

# mv iamtest.yourcompany.key storage/certs/private.key
# mv certificate.pfx storage/certs/certificate.pfx
# mv referenceNumber.cer storage/certs/certificate.cer
